Gnftato/
├── client/                 # 前端Vue项目
│   ├── src/
│   │   ├── views/          # 页面组件
│   │   │   ├── Home.vue    # 主页/仪表盘，显示系统概况
│   │   │   ├── Servers.vue # 服务器管理页面，用于添加/编辑/删除服务器
│   │   │   ├── Rules.vue   # 防火墙规则管理，配置nftables规则
│   │   │   ├── Login.vue   # 用户登录页面
│   │   │   ├── Register.vue # 用户注册页面
│   │   │   ├── Profile.vue # 用户资料设置页面
│   │   ├── components/     # 通用组件
│   │   │   ├── ServerForm.vue    # 服务器添加/编辑表单组件
│   │   │   ├── ChangePasswordForm.vue # 修改密码表单组件
│   │   │   ├── rules/      # 规则相关子组件
│   │   ├── router/         # Vue路由管理
│   │   │   ├── index.js    # 路由配置文件，定义应用所有路由
│   │   ├── store/          # Vuex状态管理
│   │   │   ├── index.js    # Vuex入口，组装模块并导出store
│   │   │   ├── modules/    # Vuex模块目录
│   │   │       ├── auth.js    # 认证状态管理模块
│   │   │       ├── servers.js # 服务器状态管理模块 
│   │   │       ├── rules.js   # 规则状态管理模块
│   │   ├── App.vue         # 应用主组件，根组件
│   │   ├── main.js         # 应用入口文件，初始化Vue实例
│   ├── public/             # 静态资源
│   │   ├── index.html      # HTML模板文件
│   ├── package.json        # 前端依赖管理
│   ├── vue.config.js       # Vue配置文件
│   ├── babel.config.js     # Babel配置
│   ├── .npmrc              # NPM配置文件
├── server/                 # 后端Express项目
│   ├── controllers/        # 控制器
│   │   ├── serverController.js  # 服务器管理控制器，处理服务器CRUD操作
│   │   ├── rulesController.js   # 规则管理控制器，处理防火墙规则操作
│   │   ├── authController.js    # 认证控制器，处理登录/注册等操作
│   ├── models/             # 数据模型
│   │   ├── Server.js       # 服务器模型，定义服务器数据结构
│   │   ├── Rule.js         # 规则模型，定义防火墙规则数据结构
│   │   ├── User.js         # 用户模型，定义用户数据结构及认证逻辑
│   ├── services/           # 业务逻辑
│   │   ├── sshService.js      # SSH连接服务，处理与远程服务器的通信
│   │   ├── nftablesService.js # nftables管理服务，处理nftables规则应用
│   │   ├── cacheService.js    # 缓存服务，缓存服务器状态和规则数据
│   ├── routes/             # API路由
│   │   ├── serverRoutes.js # 服务器相关API路由
│   │   ├── rulesRoutes.js  # 规则相关API路由
│   │   ├── authRoutes.js   # 认证相关API路由
│   ├── middlewares/        # 中间件
│   │   ├── authMiddleware.js # 认证中间件，处理API访问权限验证
│   ├── scripts/            # 脚本文件
│   │   ├── Nftato.sh       # nftables核心主脚本备份
│   │   ├── createAdmin.js  # 创建管理员用户脚本
│   ├── data/               # 数据存储目录，用于JSON文件存储
│   ├── public/             # 静态资源
│   ├── app.js              # 主应用入口，Express服务器配置
│   ├── config.json         # 应用配置文件
│   ├── start.sh            # 后端启动脚本
│   ├── nodemon.json        # Nodemon配置，用于开发环境
├── Nftato.sh               # nftables核心主脚本
├── intcentos.sh            # CentOS系统安装脚本（仅测试）
├── start-all.sh            # 前后端一键启动脚本
├── Dockerfile              # Docker配置文件，用于容器化部署
├── .env                    # 环境变量配置
├── .env.example            # 环境变量示例文件
├── package.json            # 项目根目录依赖管理
├── package-lock.json       # 依赖版本锁定文件
├── .gitignore              # Git忽略配置
├── README.md               # 项目说明文档